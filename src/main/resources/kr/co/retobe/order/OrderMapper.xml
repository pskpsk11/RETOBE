<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.retobe.order.OrderMapper">

	<!-- chiefpay -->
	<select id="getlistgm" resultType="map" >
		SELECT p.order_no, m.hp, m.member_no, m.name, m.id, m.email, d.i_subject, d.i_cname, p.pay_total, p.point_usage, p.pay_date,d.product_no, p.pay_by  
		FROM tobe.member m 
		inner join tobe.pay p on m.member_no = p.member_no
		inner join tobe.pay_detail d on p.order_no = d.order_no
	</select>
	<select id="getcontentgm" resultType="map">
		SELECT  m.name, m.member_no, m.hp, m.id, m.email,p.order_no, p.pay_total, p.point_usage, p.pay_date,d.product_no , d.i_cname, p.pay_by
		FROM tobe.member m 
		inner join tobe.pay p on m.member_no = p.member_no
		inner join tobe.pay_detail d on p.order_no = d.order_no
     </select>   
     
     <!-- adpay -->
     <select id="getlistm" resultType="map" >
		SELECT p.order_no, m.name, m.id, m.email, d.i_subject, d.i_cname, p.pay_total, p.point_usage, p.pay_date,d.product_no, p.pay_by  
		FROM tobe.member m 
		inner join tobe.pay p on m.member_no = p.member_no
		inner join tobe.pay_detail d on p.order_no = d.order_no
	</select>
	<select id="getcontentm" resultType="map">
		SELECT  m.name, m.id, m.email,p.order_no, p.pay_total, p.point_usage, p.pay_date,d.product_no , d.i_cname, p.pay_by
		FROM tobe.member m 
		inner join tobe.pay p on m.member_no = p.member_no
		inner join tobe.pay_detail d on p.order_no = d.order_no
     </select>  
     
     <!-- sales -->
     <select id="payList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT education, DATE_FORMAT(pay_date,'%Y-%m-%d') AS pay_date, pay_total, charge_total
	    FROM course c JOIN pay_detail pd
	    ON c.course_no=pd.course_no
	    JOIN pay p ON pd.order_no=p.order_no
	    <where>
	    	pay_refund=0
		    <if test="education!=null and education!=''">
		        AND education = #{education}
		    </if>
	        <if test="(startday!=null and startday!='') and (endday!=null and endday!='')">
  	        <![CDATA[
	             AND pay_date BETWEEN STR_TO_DATE(#{startday}, '%Y-%m-%d') AND STR_TO_DATE(#{endday}, '%Y-%m-%d')
	        ]]>
	        </if>
	        <if test="(startday!=null and startday!='')and (endday==null or endday=='')">
	        <![CDATA[
	            AND STR_TO_DATE(pay_date, '%Y-%m-%d') >= STR_TO_DATE(#{startday}, '%Y-%m-%d')
	        ]]>
	        </if>
	        <if test="(startday==null or startday=='') and (endday!=null and endday!='')">
	         <![CDATA[
	            AND STR_TO_DATE(pay_date, '%Y-%m-%d') <= STR_TO_DATE(#{endday}, '%Y-%m-%d')
	        ]]>
	        </if>
	    </where>
	    ORDER BY p.order_no DESC
	</select>
	
	<select id="conEduTotal" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT sum(pay_total) as pay_total, sum(charge_total) as charge_total, education
	    FROM course c JOIN pay_detail pd
	    ON c.course_no=pd.course_no
	    JOIN pay p ON pd.order_no=p.order_no
	    <where>
	    	pay_refund=0
	        <if test="(startday!=null and startday!='') and (endday!=null and endday!='')">
   	        <![CDATA[
	             AND pay_date BETWEEN STR_TO_DATE(#{startday}, '%Y-%m-%d') AND STR_TO_DATE(#{endday}, '%Y-%m-%d')
	        ]]>
	        </if>
	        <if test="(startday!=null and startday!='')and (endday==null or endday=='')">
	        <![CDATA[
	            AND pay_date >= STR_TO_DATE(#{startday}, '%Y-%m-%d')
	        ]]>
	        </if>
	        <if test="(startday==null or startday=='') and (endday!=null and endday!='')">
	         <![CDATA[
	            AND pay_date <= STR_TO_DATE(#{endday}, '%Y-%m-%d')
	        ]]>
	        </if>
	    </where>
    	GROUP BY education
    	ORDER BY education
	</select>
	
	
	<!-- 전체선택했을 때와 학원선택없이 날짜만 선택했을 때의 총매출, 총수수료-->
	<select id="pay_chargeTotal" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT SUM(pay_total) AS pay_total, SUM(charge_total) AS charge_total
	    FROM course c JOIN pay_detail pd
	    ON c.course_no=pd.course_no
	    JOIN pay p ON pd.order_no=p.order_no
	    <where>
	    	pay_refund=0
	        <if test="(startday!=null and startday!='') and (endday!=null and endday!='')">
   	        <![CDATA[
	             AND pay_date BETWEEN STR_TO_DATE(#{startday}, '%Y-%m-%d') AND STR_TO_DATE(#{endday}, '%Y-%m-%d')
	        ]]>
	        </if>
	        <if test="(startday!=null and startday!='')and (endday==null or endday=='')">
	        <![CDATA[
	            AND pay_date >= STR_TO_DATE(#{startday}, '%Y-%m-%d')
	        ]]>
	        </if>
	        <if test="(startday==null or startday=='') and (endday!=null and endday!='')">
	         <![CDATA[
	            AND pay_date <= STR_TO_DATE(#{endday}, '%Y-%m-%d')
	        ]]>
	        </if>
	   	</where>
	</select>

	<!-- user -->
	<select id="payDetailIndex" parameterType="int" resultType="java.util.Map">
		SELECT pd.*, p.*, teacher_img_org, DATE_FORMAT(pay_date,'%Y-%m-%d %H:%i') AS pay_date2, ad_name, ad_account, 
		(SELECT name FROM member WHERE member_no = p.member_no) as member_name ,
		(SELECT email FROM member WHERE member_no = p.member_no) as member_email,
		(SELECT hp FROM member WHERE member_no = p.member_no) as member_hp
		
		FROM pay p JOIN pay_detail pd ON p.order_no=pd.order_no
			JOIN course c ON pd.course_no=c.course_no
			JOIN admin a ON c.education=a.ad_type
		WHERE detail_no = #{detail_no}
	</select>	
	
	<!-- 어느 테이블에 넣을지 생각해보기 -->
	<update id="payCancel" parameterType="java.util.Map">
		UPDATE pay
		SET pay_cancel=1,
			pay_cancel_date= now(),
		    pay_cancel_reason = #{pay_cancel_reason},
		    pay_cancel_reason_detail = #{pay_cancel_reason_detail}
		where order_no = #{order_no};
	</update>	
	
	<select id="payCancelDetailIndex" parameterType="int" resultType="java.util.Map">
		SELECT pd.*, p.*, teacher_img_org, DATE_FORMAT(pay_refund_date,'%Y-%m-%d %H:%i') AS pay_refund_date2, name
		FROM member m JOIN pay p ON m.member_no=p.member_no
			JOIN pay_detail pd ON p.order_no=pd.order_no
			JOIN course c ON pd.course_no=c.course_no
		WHERE detail_no = #{detail_no}
	</select>	
	
	<select id="getCart" resultType="map" parameterType="String">	
		SELECT education, area, branch, subject, mon, tue, wed, thu, fri, sat, sun, time, price, cname, cart_no, teacher_img_org
		FROM basket INNER JOIN course
		ON basket.course_no = course.course_no
		WHERE cart_no in (${a}) 
	</select>
	
	<insert id="pay" parameterType="kr.co.retobe.vo.PayVO">
		INSERT INTO pay (`member_no`, `pay_complete`, `pay_cancel`, `pay_refund`, `pay_date`, `pay_cancel_date`, `pay_refund_date`, `pay_by`, `pay_total`, `point_usage`, `charge_total`, `pay_detail`, `pay_by_account`, `pay_cancel_reason`, `pay_cancel_reason_detail`) 
		VALUES (#{member_no}, #{pay_complete}, #{pay_cancel}, #{pay_refund}, NOW(), #{pay_cancel_date}, #{pay_refund_date}, #{pay_by}, #{pay_total}, #{point_usage}, #{charge_total}, #{pay_detail}, #{pay_by_account}, #{pay_cancel_reason}, #{pay_cancel_reason_detail});
	</insert>
	
	<insert id="payDetail" parameterType="kr.co.retobe.vo.PayDetailVO">
	 	INSERT INTO pay_detail (`order_no`, `course_no`, `product_no`, `pay_single`, `pay_charge`, `i_education`, `i_area`, `i_branch`, `i_subject`, `i_level`, `i_mon`, `i_tue`, `i_wed`, `i_thu`, `i_fri`, `i_sat`, `i_sun`, `i_startday`, `i_endday`, `i_cname`, `i_time`, `i_price`) 
	 	VALUES (#{order_no}, #{course_no}, #{product_no}, #{pay_single}, #{pay_charge}, #{i_education}, #{i_area}, #{i_branch}, #{i_subject}, #{i_level}, #{i_mon}, #{i_tue}, #{i_wed}, #{i_thu}, #{i_fri}, #{i_sat}, #{i_sun}, #{i_startday}, #{i_endday}, #{i_cname}, #{i_time}, #{i_price});
	</insert>
	
	<select id="getorder" resultType="java.util.Map" parameterType="map">
	 	SELECT pd.product_no, pd.i_price, p.pay_total
		FROM basket b JOIN pay p ON b.member_no=p.member_no
			JOIN pay_detail pd ON p.order_no=pd.order_no
		WHERE cart_no in (#{cart_no}) and b.member_no=#{member_no}
	</select>

</mapper>